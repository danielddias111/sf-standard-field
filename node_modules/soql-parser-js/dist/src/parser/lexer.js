"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Using = exports.True = exports.Select = exports.Rollup = exports.Or = exports.Nulls = exports.Null = exports.Not = exports.Limit = exports.Like = exports.Last = exports.Includes = exports.NotIn = exports.In = exports.Having = exports.GroupBy = exports.From = exports.First = exports.False = exports.Excludes = exports.Else = exports.Cube = exports.OrderBy = exports.Asc = exports.Desc = exports.As = exports.And = exports.WhiteSpace = exports.StringIdentifier = exports.Identifier = exports.RParenMismatch = exports.UsingScopeEnumeration = exports.IdentifierNotKeyword = exports.IntegerNumberIdentifier = exports.DecimalNumberIdentifier = exports.NumberIdentifier = exports.DateIdentifier = exports.SymbolIdentifier = exports.RelationalOperator = exports.DateNLiteral = exports.DateLiteralNotIdentifier = exports.DateLiteral = exports.OtherFunction = exports.FieldsFunctionParamIdentifier = exports.FieldsFunction = exports.LocationFunction = exports.AggregateFunction = exports.DateFunction = exports.Keyword = exports.ReservedKeyword = void 0;
exports.Standard = exports.Custom = exports.All = exports.Grouping = exports.ConvertCurrency = exports.ConvertTimeZone = exports.Tolabel = exports.Format = exports.Fields = exports.Geolocation = exports.Distance = exports.Sum = exports.Max = exports.Min = exports.CountDistinct = exports.Count = exports.Avg = exports.WeekInYear = exports.WeekInMonth = exports.HourInDay = exports.FiscalYear = exports.FiscalQuarter = exports.FiscalMonth = exports.DayOnly = exports.DayInYear = exports.DayInWeek = exports.DayInMonth = exports.CalendarYear = exports.CalendarQuarter = exports.CalendarMonth = exports.SecurityEnforced = exports.When = exports.Viewstat = exports.View = exports.Typeof = exports.Then = exports.Tracking = exports.Scope = exports.Reference = exports.Offset = exports.End = exports.DataCategory = exports.Below = exports.At = exports.AboveOrBelow = exports.Above = exports.Update = exports.For = exports.With = exports.Where = void 0;
exports.GreaterThanOrEqual = exports.GreaterThan = exports.LessThanOrEqual = exports.LessThan = exports.NotEqual = exports.Equal = exports.NFiscalYearsAgo = exports.LastNFiscalYears = exports.NextNFiscalYears = exports.NFiscalQuartersAgo = exports.LastNFiscalQuarters = exports.NextNFiscalQuarters = exports.NYearsAgo = exports.LastNYears = exports.NextNYears = exports.NQuartersAgo = exports.LastNQuarters = exports.NextNQuarters = exports.NMonthsAgo = exports.LastNMonths = exports.NextNMonths = exports.NWeeksAgo = exports.LastNWeeks = exports.NextNWeeks = exports.NDaysAgo = exports.LastNDays = exports.NextNDays = exports.NextFiscalYear = exports.LastFiscalYear = exports.ThisFiscalYear = exports.NextFiscalQuarter = exports.LastFiscalQuarter = exports.ThisFiscalQuarter = exports.NextYear = exports.LastYear = exports.ThisYear = exports.NextQuarter = exports.LastQuarter = exports.ThisQuarter = exports.Next90_days = exports.Last90_days = exports.NextMonth = exports.ThisMonth = exports.LastMonth = exports.NextWeek = exports.ThisWeek = exports.LastWeek = exports.Tomorrow = exports.Today = exports.Yesterday = void 0;
exports.lex = exports.allTokens = exports.AllPrivate = exports.Team = exports.MyTeamTerritory = exports.MyTerritory = exports.Mine = exports.MineAndMyGroups = exports.Everything = exports.Delegated = exports.UnsignedInteger = exports.GeolocationUnit = exports.SignedInteger = exports.CurrencyPrefixedInteger = exports.UnsignedDecimal = exports.SignedDecimal = exports.CurrencyPrefixedDecimal = exports.DateToken = exports.DateTime = exports.Minus = exports.Plus = exports.RParen = exports.LParen = exports.Asterisk = exports.Comma = exports.Semicolon = exports.Colon = exports.Decimal = void 0;
var chevrotain_1 = require("chevrotain");
exports.ReservedKeyword = chevrotain_1.createToken({
    name: 'KeywordReserved',
    pattern: chevrotain_1.Lexer.NA,
});
exports.Keyword = chevrotain_1.createToken({
    name: 'Keyword',
    pattern: chevrotain_1.Lexer.NA,
});
exports.DateFunction = chevrotain_1.createToken({
    name: 'DateFunction',
    pattern: chevrotain_1.Lexer.NA,
});
exports.AggregateFunction = chevrotain_1.createToken({
    name: 'AggregateFunction',
    pattern: chevrotain_1.Lexer.NA,
});
exports.LocationFunction = chevrotain_1.createToken({
    name: 'LocationFunction',
    pattern: chevrotain_1.Lexer.NA,
});
exports.FieldsFunction = chevrotain_1.createToken({
    name: 'FieldsFunction',
    pattern: chevrotain_1.Lexer.NA,
});
exports.FieldsFunctionParamIdentifier = chevrotain_1.createToken({
    name: 'FieldsFunctionParamIdentifier',
    pattern: chevrotain_1.Lexer.NA,
});
exports.OtherFunction = chevrotain_1.createToken({
    name: 'OtherFunction',
    pattern: chevrotain_1.Lexer.NA,
});
exports.DateLiteral = chevrotain_1.createToken({
    name: 'DateLiteral',
    pattern: chevrotain_1.Lexer.NA,
});
exports.DateLiteralNotIdentifier = chevrotain_1.createToken({
    name: 'DateLiteralNotIdentifier',
    pattern: chevrotain_1.Lexer.NA,
});
exports.DateNLiteral = chevrotain_1.createToken({
    name: 'DateNLiteral',
    pattern: chevrotain_1.Lexer.NA,
});
exports.RelationalOperator = chevrotain_1.createToken({
    name: 'RelationalOperator',
    pattern: chevrotain_1.Lexer.NA,
});
exports.SymbolIdentifier = chevrotain_1.createToken({
    name: 'SymbolIdentifier',
    pattern: chevrotain_1.Lexer.NA,
});
exports.DateIdentifier = chevrotain_1.createToken({
    name: 'DateIdentifier',
    pattern: chevrotain_1.Lexer.NA,
});
exports.NumberIdentifier = chevrotain_1.createToken({
    name: 'NumberIdentifier',
    pattern: chevrotain_1.Lexer.NA,
});
exports.DecimalNumberIdentifier = chevrotain_1.createToken({
    name: 'DecimalNumberIdentifier',
    pattern: chevrotain_1.Lexer.NA,
});
exports.IntegerNumberIdentifier = chevrotain_1.createToken({
    name: 'IntegerNumberIdentifier',
    pattern: chevrotain_1.Lexer.NA,
});
exports.IdentifierNotKeyword = chevrotain_1.createToken({
    name: 'IdentifierNotKeyword',
    pattern: chevrotain_1.Lexer.NA,
});
exports.UsingScopeEnumeration = chevrotain_1.createToken({
    name: 'UsingScopeEnumeration',
    pattern: chevrotain_1.Lexer.NA,
});
exports.RParenMismatch = chevrotain_1.createToken({
    name: 'RParenMismatch',
    pattern: chevrotain_1.Lexer.NA,
});
var identifierRegex = /[a-zA-Z][a-zA-Z0-9_.]*/y;
function matchIdentifier(text, startOffset) {
    identifierRegex.lastIndex = startOffset;
    var execResult = identifierRegex.exec(text);
    if (execResult && execResult[0].includes('..')) {
        return null;
    }
    return execResult;
}
exports.Identifier = chevrotain_1.createToken({
    name: 'Identifier',
    pattern: matchIdentifier,
    line_breaks: false,
    categories: [exports.IdentifierNotKeyword],
    start_chars_hint: [
        'a',
        'b',
        'c',
        'd',
        'e',
        'f',
        'g',
        'h',
        'i',
        'j',
        'k',
        'l',
        'm',
        'n',
        'o',
        'p',
        'q',
        'r',
        's',
        't',
        'u',
        'v',
        'w',
        'x',
        'y',
        'z',
        'A',
        'B',
        'C',
        'D',
        'E',
        'F',
        'G',
        'H',
        'I',
        'J',
        'K',
        'L',
        'M',
        'N',
        'O',
        'P',
        'Q',
        'R',
        'S',
        'T',
        'U',
        'V',
        'W',
        'X',
        'Y',
        'Z',
    ],
});
exports.StringIdentifier = chevrotain_1.createToken({ name: 'StringIdentifier', line_breaks: true, pattern: /(')(?:(?=(\\?))\2.)*?\1/ });
exports.WhiteSpace = chevrotain_1.createToken({
    name: 'WhiteSpace',
    pattern: /\s+/,
    group: chevrotain_1.Lexer.SKIPPED,
});
exports.And = chevrotain_1.createToken({ name: 'AND', pattern: /AND/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.As = chevrotain_1.createToken({ name: 'AS', pattern: /AS/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.Desc = chevrotain_1.createToken({ name: 'DESC', pattern: /DESC/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.Asc = chevrotain_1.createToken({ name: 'ASC', pattern: /ASC/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.OrderBy = chevrotain_1.createToken({ name: 'ORDER_BY', pattern: /ORDER BY/i, longer_alt: exports.Identifier });
exports.Cube = chevrotain_1.createToken({ name: 'CUBE', pattern: /CUBE/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.Else = chevrotain_1.createToken({ name: 'ELSE', pattern: /ELSE/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.Excludes = chevrotain_1.createToken({
    name: 'EXCLUDES',
    pattern: /EXCLUDES/i,
    longer_alt: exports.Identifier,
    categories: [exports.Keyword, exports.ReservedKeyword],
});
exports.False = chevrotain_1.createToken({ name: 'FALSE', pattern: /FALSE/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.First = chevrotain_1.createToken({ name: 'FIRST', pattern: /FIRST/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.From = chevrotain_1.createToken({ name: 'FROM', pattern: /FROM/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.GroupBy = chevrotain_1.createToken({ name: 'GROUP_BY', pattern: /GROUP BY/i, longer_alt: exports.Identifier });
exports.Having = chevrotain_1.createToken({ name: 'HAVING', pattern: /HAVING/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.In = chevrotain_1.createToken({ name: 'IN', pattern: /IN/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.NotIn = chevrotain_1.createToken({ name: 'NOT_IN', pattern: /NOT IN/i, longer_alt: exports.Identifier });
exports.Includes = chevrotain_1.createToken({
    name: 'INCLUDES',
    pattern: /INCLUDES/i,
    longer_alt: exports.Identifier,
    categories: [exports.Keyword, exports.ReservedKeyword],
});
exports.Last = chevrotain_1.createToken({ name: 'LAST', pattern: /LAST/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.Like = chevrotain_1.createToken({ name: 'LIKE', pattern: /LIKE/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.Limit = chevrotain_1.createToken({ name: 'LIMIT', pattern: /LIMIT/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.Not = chevrotain_1.createToken({ name: 'NOT', pattern: /NOT/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.Null = chevrotain_1.createToken({ name: 'NULL', pattern: /NULL/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.Nulls = chevrotain_1.createToken({ name: 'NULLS', pattern: /NULLS/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.Or = chevrotain_1.createToken({ name: 'OR', pattern: /OR/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.Rollup = chevrotain_1.createToken({ name: 'ROLLUP', pattern: /ROLLUP/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.Select = chevrotain_1.createToken({ name: 'SELECT', pattern: /SELECT/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.True = chevrotain_1.createToken({ name: 'TRUE', pattern: /TRUE/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.Using = chevrotain_1.createToken({ name: 'USING', pattern: /USING/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.Where = chevrotain_1.createToken({ name: 'WHERE', pattern: /WHERE/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.With = chevrotain_1.createToken({ name: 'WITH', pattern: /WITH/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.For = chevrotain_1.createToken({ name: 'FOR', pattern: /FOR/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.Update = chevrotain_1.createToken({ name: 'UPDATE', pattern: /UPDATE/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.ReservedKeyword] });
exports.Above = chevrotain_1.createToken({ name: 'ABOVE', pattern: /ABOVE/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.Identifier] });
exports.AboveOrBelow = chevrotain_1.createToken({
    name: 'ABOVE_OR_BELOW',
    pattern: /ABOVE_OR_BELOW/i,
    longer_alt: exports.Identifier,
    categories: [exports.Keyword, exports.Identifier],
});
exports.At = chevrotain_1.createToken({ name: 'AT', pattern: /AT/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.Identifier] });
exports.Below = chevrotain_1.createToken({ name: 'BELOW', pattern: /BELOW/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.Identifier] });
exports.DataCategory = chevrotain_1.createToken({
    name: 'DATA_CATEGORY',
    pattern: /DATA CATEGORY/i,
    longer_alt: exports.Identifier,
    categories: [exports.Keyword],
});
exports.End = chevrotain_1.createToken({ name: 'END', pattern: /END/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.Identifier] });
exports.Offset = chevrotain_1.createToken({ name: 'OFFSET', pattern: /OFFSET/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.Identifier] });
exports.Reference = chevrotain_1.createToken({
    name: 'REFERENCE',
    pattern: /REFERENCE/i,
    longer_alt: exports.Identifier,
    categories: [exports.Keyword, exports.Identifier],
});
exports.Scope = chevrotain_1.createToken({ name: 'SCOPE', pattern: /SCOPE/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.Identifier] });
exports.Tracking = chevrotain_1.createToken({ name: 'TRACKING', pattern: /TRACKING/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.Identifier] });
exports.Then = chevrotain_1.createToken({ name: 'THEN', pattern: /THEN/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.Identifier] });
exports.Typeof = chevrotain_1.createToken({ name: 'TYPEOF', pattern: /TYPEOF/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.Identifier] });
exports.View = chevrotain_1.createToken({ name: 'VIEW', pattern: /VIEW/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.Identifier] });
exports.Viewstat = chevrotain_1.createToken({ name: 'VIEWSTAT', pattern: /VIEWSTAT/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.Identifier] });
exports.When = chevrotain_1.createToken({ name: 'WHEN', pattern: /WHEN/i, longer_alt: exports.Identifier, categories: [exports.Keyword, exports.Identifier] });
exports.SecurityEnforced = chevrotain_1.createToken({
    name: 'SECURITY_ENFORCED',
    pattern: /SECURITY_ENFORCED/i,
    longer_alt: exports.Identifier,
    categories: [exports.Keyword, exports.Identifier],
});
exports.CalendarMonth = chevrotain_1.createToken({
    name: 'CALENDAR_MONTH',
    pattern: /CALENDAR_MONTH/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateFunction, exports.Identifier],
});
exports.CalendarQuarter = chevrotain_1.createToken({
    name: 'CALENDAR_QUARTER',
    pattern: /CALENDAR_QUARTER/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateFunction, exports.Identifier],
});
exports.CalendarYear = chevrotain_1.createToken({
    name: 'CALENDAR_YEAR',
    pattern: /CALENDAR_YEAR/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateFunction, exports.Identifier],
});
exports.DayInMonth = chevrotain_1.createToken({
    name: 'DAY_IN_MONTH',
    pattern: /DAY_IN_MONTH/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateFunction, exports.Identifier],
});
exports.DayInWeek = chevrotain_1.createToken({
    name: 'DAY_IN_WEEK',
    pattern: /DAY_IN_WEEK/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateFunction, exports.Identifier],
});
exports.DayInYear = chevrotain_1.createToken({
    name: 'DAY_IN_YEAR',
    pattern: /DAY_IN_YEAR/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateFunction, exports.Identifier],
});
exports.DayOnly = chevrotain_1.createToken({
    name: 'DAY_ONLY',
    pattern: /DAY_ONLY/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateFunction, exports.Identifier],
});
exports.FiscalMonth = chevrotain_1.createToken({
    name: 'FISCAL_MONTH',
    pattern: /FISCAL_MONTH/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateFunction, exports.Identifier],
});
exports.FiscalQuarter = chevrotain_1.createToken({
    name: 'FISCAL_QUARTER',
    pattern: /FISCAL_QUARTER/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateFunction, exports.Identifier],
});
exports.FiscalYear = chevrotain_1.createToken({
    name: 'FISCAL_YEAR',
    pattern: /FISCAL_YEAR/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateFunction, exports.Identifier],
});
exports.HourInDay = chevrotain_1.createToken({
    name: 'HOUR_IN_DAY',
    pattern: /HOUR_IN_DAY/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateFunction, exports.Identifier],
});
exports.WeekInMonth = chevrotain_1.createToken({
    name: 'WEEK_IN_MONTH',
    pattern: /WEEK_IN_MONTH/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateFunction, exports.Identifier],
});
exports.WeekInYear = chevrotain_1.createToken({
    name: 'WEEK_IN_YEAR',
    pattern: /WEEK_IN_YEAR/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateFunction, exports.Identifier],
});
exports.Avg = chevrotain_1.createToken({ name: 'AVG', pattern: /AVG/i, longer_alt: exports.Identifier, categories: [exports.AggregateFunction, exports.Identifier] });
exports.Count = chevrotain_1.createToken({ name: 'COUNT', pattern: /COUNT/i, longer_alt: exports.Identifier, categories: [exports.AggregateFunction, exports.Identifier] });
exports.CountDistinct = chevrotain_1.createToken({
    name: 'COUNT_DISTINCT',
    pattern: /COUNT_DISTINCT/i,
    longer_alt: exports.Identifier,
    categories: [exports.AggregateFunction, exports.Identifier],
});
exports.Min = chevrotain_1.createToken({ name: 'MIN', pattern: /MIN/i, longer_alt: exports.Identifier, categories: [exports.AggregateFunction, exports.Identifier] });
exports.Max = chevrotain_1.createToken({ name: 'MAX', pattern: /MAX/i, longer_alt: exports.Identifier, categories: [exports.AggregateFunction, exports.Identifier] });
exports.Sum = chevrotain_1.createToken({ name: 'SUM', pattern: /SUM/i, longer_alt: exports.Identifier, categories: [exports.AggregateFunction, exports.Identifier] });
exports.Distance = chevrotain_1.createToken({
    name: 'DISTANCE',
    pattern: /DISTANCE/i,
    longer_alt: exports.Identifier,
    categories: [exports.LocationFunction, exports.Identifier],
});
exports.Geolocation = chevrotain_1.createToken({
    name: 'GEOLOCATION',
    pattern: /GEOLOCATION/i,
    longer_alt: exports.Identifier,
    categories: [exports.LocationFunction, exports.Identifier],
});
exports.Fields = chevrotain_1.createToken({
    name: 'FIELDS',
    pattern: /FIELDS/i,
    longer_alt: exports.Identifier,
    categories: [exports.FieldsFunction, exports.Identifier],
});
exports.Format = chevrotain_1.createToken({
    name: 'FORMAT',
    pattern: /FORMAT/i,
    longer_alt: exports.Identifier,
    categories: [exports.OtherFunction, exports.Identifier],
});
exports.Tolabel = chevrotain_1.createToken({
    name: 'toLabel',
    pattern: /TOLABEL/i,
    longer_alt: exports.Identifier,
    categories: [exports.OtherFunction, exports.Identifier],
});
exports.ConvertTimeZone = chevrotain_1.createToken({
    name: 'convertTimezone',
    pattern: /CONVERTTIMEZONE/i,
    longer_alt: exports.Identifier,
    categories: [exports.OtherFunction, exports.Identifier],
});
exports.ConvertCurrency = chevrotain_1.createToken({
    name: 'convertCurrency',
    pattern: /CONVERTCURRENCY/i,
    longer_alt: exports.Identifier,
    categories: [exports.OtherFunction, exports.Identifier],
});
exports.Grouping = chevrotain_1.createToken({
    name: 'GROUPING',
    pattern: /GROUPING/i,
    longer_alt: exports.Identifier,
    categories: [exports.OtherFunction, exports.Identifier],
});
exports.All = chevrotain_1.createToken({
    name: 'ALL',
    pattern: /ALL/i,
    longer_alt: exports.Identifier,
    categories: [exports.FieldsFunctionParamIdentifier, exports.Identifier],
});
exports.Custom = chevrotain_1.createToken({
    name: 'CUSTOM',
    pattern: /CUSTOM/i,
    longer_alt: exports.Identifier,
    categories: [exports.FieldsFunctionParamIdentifier, exports.Identifier],
});
exports.Standard = chevrotain_1.createToken({
    name: 'STANDARD',
    pattern: /STANDARD/i,
    longer_alt: exports.Identifier,
    categories: [exports.FieldsFunctionParamIdentifier, exports.Identifier],
});
exports.Yesterday = chevrotain_1.createToken({
    name: 'YESTERDAY',
    pattern: /YESTERDAY/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateLiteral, exports.Identifier, exports.DateLiteralNotIdentifier],
});
exports.Today = chevrotain_1.createToken({
    name: 'TODAY',
    pattern: /TODAY/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateLiteral, exports.Identifier, exports.DateLiteralNotIdentifier],
});
exports.Tomorrow = chevrotain_1.createToken({
    name: 'TOMORROW',
    pattern: /TOMORROW/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateLiteral, exports.Identifier, exports.DateLiteralNotIdentifier],
});
exports.LastWeek = chevrotain_1.createToken({
    name: 'LAST_WEEK',
    pattern: /LAST_WEEK/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateLiteral, exports.Identifier, exports.DateLiteralNotIdentifier],
});
exports.ThisWeek = chevrotain_1.createToken({
    name: 'THIS_WEEK',
    pattern: /THIS_WEEK/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateLiteral, exports.Identifier, exports.DateLiteralNotIdentifier],
});
exports.NextWeek = chevrotain_1.createToken({
    name: 'NEXT_WEEK',
    pattern: /NEXT_WEEK/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateLiteral, exports.Identifier, exports.DateLiteralNotIdentifier],
});
exports.LastMonth = chevrotain_1.createToken({
    name: 'LAST_MONTH',
    pattern: /LAST_MONTH/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateLiteral, exports.Identifier, exports.DateLiteralNotIdentifier],
});
exports.ThisMonth = chevrotain_1.createToken({
    name: 'THIS_MONTH',
    pattern: /THIS_MONTH/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateLiteral, exports.Identifier, exports.DateLiteralNotIdentifier],
});
exports.NextMonth = chevrotain_1.createToken({
    name: 'NEXT_MONTH',
    pattern: /NEXT_MONTH/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateLiteral, exports.Identifier, exports.DateLiteralNotIdentifier],
});
exports.Last90_days = chevrotain_1.createToken({
    name: 'LAST_90_DAYS',
    pattern: /LAST_90_DAYS/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateLiteral, exports.Identifier, exports.DateLiteralNotIdentifier],
});
exports.Next90_days = chevrotain_1.createToken({
    name: 'NEXT_90_DAYS',
    pattern: /NEXT_90_DAYS/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateLiteral, exports.Identifier, exports.DateLiteralNotIdentifier],
});
exports.ThisQuarter = chevrotain_1.createToken({
    name: 'THIS_QUARTER',
    pattern: /THIS_QUARTER/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateLiteral, exports.Identifier, exports.DateLiteralNotIdentifier],
});
exports.LastQuarter = chevrotain_1.createToken({
    name: 'LAST_QUARTER',
    pattern: /LAST_QUARTER/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateLiteral, exports.Identifier, exports.DateLiteralNotIdentifier],
});
exports.NextQuarter = chevrotain_1.createToken({
    name: 'NEXT_QUARTER',
    pattern: /NEXT_QUARTER/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateLiteral, exports.Identifier, exports.DateLiteralNotIdentifier],
});
exports.ThisYear = chevrotain_1.createToken({
    name: 'THIS_YEAR',
    pattern: /THIS_YEAR/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateLiteral, exports.Identifier, exports.DateLiteralNotIdentifier],
});
exports.LastYear = chevrotain_1.createToken({
    name: 'LAST_YEAR',
    pattern: /LAST_YEAR/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateLiteral, exports.Identifier, exports.DateLiteralNotIdentifier],
});
exports.NextYear = chevrotain_1.createToken({
    name: 'NEXT_YEAR',
    pattern: /NEXT_YEAR/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateLiteral, exports.Identifier, exports.DateLiteralNotIdentifier],
});
exports.ThisFiscalQuarter = chevrotain_1.createToken({
    name: 'THIS_FISCAL_QUARTER',
    pattern: /THIS_FISCAL_QUARTER/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateLiteral, exports.Identifier, exports.DateLiteralNotIdentifier],
});
exports.LastFiscalQuarter = chevrotain_1.createToken({
    name: 'LAST_FISCAL_QUARTER',
    pattern: /LAST_FISCAL_QUARTER/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateLiteral, exports.Identifier, exports.DateLiteralNotIdentifier],
});
exports.NextFiscalQuarter = chevrotain_1.createToken({
    name: 'NEXT_FISCAL_QUARTER',
    pattern: /NEXT_FISCAL_QUARTER/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateLiteral, exports.Identifier, exports.DateLiteralNotIdentifier],
});
exports.ThisFiscalYear = chevrotain_1.createToken({
    name: 'THIS_FISCAL_YEAR',
    pattern: /THIS_FISCAL_YEAR/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateLiteral, exports.Identifier, exports.DateLiteralNotIdentifier],
});
exports.LastFiscalYear = chevrotain_1.createToken({
    name: 'LAST_FISCAL_YEAR',
    pattern: /LAST_FISCAL_YEAR/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateLiteral, exports.Identifier, exports.DateLiteralNotIdentifier],
});
exports.NextFiscalYear = chevrotain_1.createToken({
    name: 'NEXT_FISCAL_YEAR',
    pattern: /NEXT_FISCAL_YEAR/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateLiteral, exports.Identifier, exports.DateLiteralNotIdentifier],
});
exports.NextNDays = chevrotain_1.createToken({
    name: 'NEXT_N_DAYS',
    pattern: /NEXT_N_DAYS/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateNLiteral, exports.Identifier],
});
exports.LastNDays = chevrotain_1.createToken({
    name: 'LAST_N_DAYS',
    pattern: /LAST_N_DAYS/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateNLiteral, exports.Identifier],
});
exports.NDaysAgo = chevrotain_1.createToken({
    name: 'N_DAYS_AGO',
    pattern: /N_DAYS_AGO/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateNLiteral, exports.Identifier],
});
exports.NextNWeeks = chevrotain_1.createToken({
    name: 'NEXT_N_WEEKS',
    pattern: /NEXT_N_WEEKS/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateNLiteral, exports.Identifier],
});
exports.LastNWeeks = chevrotain_1.createToken({
    name: 'LAST_N_WEEKS',
    pattern: /LAST_N_WEEKS/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateNLiteral, exports.Identifier],
});
exports.NWeeksAgo = chevrotain_1.createToken({
    name: 'N_WEEKS_AGO',
    pattern: /N_WEEKS_AGO/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateNLiteral, exports.Identifier],
});
exports.NextNMonths = chevrotain_1.createToken({
    name: 'NEXT_N_MONTHS',
    pattern: /NEXT_N_MONTHS/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateNLiteral, exports.Identifier],
});
exports.LastNMonths = chevrotain_1.createToken({
    name: 'LAST_N_MONTHS',
    pattern: /LAST_N_MONTHS/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateNLiteral, exports.Identifier],
});
exports.NMonthsAgo = chevrotain_1.createToken({
    name: 'N_MONTHS_AGO',
    pattern: /N_MONTHS_AGO/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateNLiteral, exports.Identifier],
});
exports.NextNQuarters = chevrotain_1.createToken({
    name: 'NEXT_N_QUARTERS',
    pattern: /NEXT_N_QUARTERS/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateNLiteral, exports.Identifier],
});
exports.LastNQuarters = chevrotain_1.createToken({
    name: 'LAST_N_QUARTERS',
    pattern: /LAST_N_QUARTERS/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateNLiteral, exports.Identifier],
});
exports.NQuartersAgo = chevrotain_1.createToken({
    name: 'N_QUARTERS_AGO',
    pattern: /N_QUARTERS_AGO/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateNLiteral, exports.Identifier],
});
exports.NextNYears = chevrotain_1.createToken({
    name: 'NEXT_N_YEARS',
    pattern: /NEXT_N_YEARS/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateNLiteral, exports.Identifier],
});
exports.LastNYears = chevrotain_1.createToken({
    name: 'LAST_N_YEARS',
    pattern: /LAST_N_YEARS/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateNLiteral, exports.Identifier],
});
exports.NYearsAgo = chevrotain_1.createToken({
    name: 'N_YEARS_AGO',
    pattern: /N_YEARS_AGO/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateNLiteral, exports.Identifier],
});
exports.NextNFiscalQuarters = chevrotain_1.createToken({
    name: 'NEXT_N_FISCAL_QUARTERS',
    pattern: /NEXT_N_FISCAL_QUARTERS/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateNLiteral, exports.Identifier],
});
exports.LastNFiscalQuarters = chevrotain_1.createToken({
    name: 'LAST_N_FISCAL_QUARTERS',
    pattern: /LAST_N_FISCAL_QUARTERS/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateNLiteral, exports.Identifier],
});
exports.NFiscalQuartersAgo = chevrotain_1.createToken({
    name: 'N_FISCAL_QUARTERS_AGO',
    pattern: /N_FISCAL_QUARTERS_AGO/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateNLiteral, exports.Identifier],
});
exports.NextNFiscalYears = chevrotain_1.createToken({
    name: 'NEXT_N_FISCAL_YEARS',
    pattern: /NEXT_N_FISCAL_YEARS/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateNLiteral, exports.Identifier],
});
exports.LastNFiscalYears = chevrotain_1.createToken({
    name: 'LAST_N_FISCAL_YEARS',
    pattern: /LAST_N_FISCAL_YEARS/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateNLiteral, exports.Identifier],
});
exports.NFiscalYearsAgo = chevrotain_1.createToken({
    name: 'N_FISCAL_YEARS_AGO',
    pattern: /N_FISCAL_YEARS_AGO/i,
    longer_alt: exports.Identifier,
    categories: [exports.DateNLiteral, exports.Identifier],
});
exports.Equal = chevrotain_1.createToken({ name: 'EQUAL', pattern: '=', categories: [exports.RelationalOperator] });
exports.NotEqual = chevrotain_1.createToken({ name: 'NOT_EQUAL', pattern: /!=|<>/, categories: [exports.RelationalOperator] });
exports.LessThan = chevrotain_1.createToken({ name: 'LESS_THAN', pattern: '<', categories: [exports.RelationalOperator] });
exports.LessThanOrEqual = chevrotain_1.createToken({ name: 'LESS_THAN_OR_EQUAL', pattern: '<=', categories: [exports.RelationalOperator] });
exports.GreaterThan = chevrotain_1.createToken({ name: 'GREATER_THAN', pattern: '>', categories: [exports.RelationalOperator] });
exports.GreaterThanOrEqual = chevrotain_1.createToken({ name: 'GREATER_THAN_OR_EQUAL', pattern: '>=', categories: [exports.RelationalOperator] });
exports.Decimal = chevrotain_1.createToken({ name: 'DECIMAL', pattern: '.', categories: [exports.SymbolIdentifier] });
exports.Colon = chevrotain_1.createToken({ name: 'COLON', pattern: ':', categories: [exports.SymbolIdentifier] });
exports.Semicolon = chevrotain_1.createToken({ name: 'SEMICOLON', pattern: ';', categories: [exports.SymbolIdentifier] });
exports.Comma = chevrotain_1.createToken({ name: 'COMMA', pattern: ',', categories: [exports.SymbolIdentifier] });
exports.Asterisk = chevrotain_1.createToken({ name: 'ASTERISK', pattern: '*', categories: [exports.SymbolIdentifier] });
exports.LParen = chevrotain_1.createToken({ name: 'L_PAREN', pattern: '(', categories: [exports.SymbolIdentifier] });
exports.RParen = chevrotain_1.createToken({ name: 'R_PAREN', pattern: ')', categories: [exports.SymbolIdentifier] });
exports.Plus = chevrotain_1.createToken({ name: 'PLUS', pattern: '+', categories: [exports.SymbolIdentifier] });
exports.Minus = chevrotain_1.createToken({ name: 'MINUS', pattern: '-', categories: [exports.SymbolIdentifier] });
exports.DateTime = chevrotain_1.createToken({
    name: 'DATETIME',
    pattern: /[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(\.[0-9]+)?(\Z|\.[0-9]+Z|\+[0-9]{2}:[0-9]{2}|\-[0-9]{2}:[0-9]{2}|\+[0-9]{4}|\-[0-9]{4})/i,
    categories: [exports.DateIdentifier],
});
exports.DateToken = chevrotain_1.createToken({ name: 'DATE', pattern: /[0-9]{4}-[0-9]{2}-[0-9]{2}/, categories: [exports.DateIdentifier] });
exports.CurrencyPrefixedDecimal = chevrotain_1.createToken({
    name: 'CURRENCY_PREFIXED_DECIMAL',
    pattern: /[a-zA-Z]{3}[0-9]+\.\d+/,
    longer_alt: exports.Identifier,
    categories: [exports.DecimalNumberIdentifier],
});
exports.SignedDecimal = chevrotain_1.createToken({
    name: 'SIGNED_DECIMAL',
    pattern: /(\-|\+)[0-9]*\.\d+/,
    categories: [exports.NumberIdentifier, exports.DecimalNumberIdentifier],
});
exports.UnsignedDecimal = chevrotain_1.createToken({
    name: 'UNSIGNED_DECIMAL',
    pattern: /[0-9]*\.\d+/,
    categories: [exports.NumberIdentifier, exports.DecimalNumberIdentifier],
});
exports.CurrencyPrefixedInteger = chevrotain_1.createToken({
    name: 'CURRENCY_PREFIXED_INTEGER',
    pattern: /[a-zA-Z]{3}[0-9]+/,
    longer_alt: exports.Identifier,
    categories: [exports.DecimalNumberIdentifier, exports.Identifier],
});
exports.SignedInteger = chevrotain_1.createToken({
    name: 'SIGNED_INTEGER',
    pattern: /(\-|\+)[0-9]+/,
    categories: [exports.NumberIdentifier, exports.IntegerNumberIdentifier],
});
exports.GeolocationUnit = chevrotain_1.createToken({
    name: 'GEOLOCATION_UNIT',
    pattern: /'(mi|km)'/i,
    longer_alt: exports.Identifier,
    categories: [exports.Identifier],
});
exports.UnsignedInteger = chevrotain_1.createToken({
    name: 'UNSIGNED_INTEGER',
    pattern: /0|[1-9]\d*/,
    categories: [exports.NumberIdentifier, exports.IntegerNumberIdentifier],
});
exports.Delegated = chevrotain_1.createToken({
    name: 'Delegated',
    pattern: /DELEGATED/i,
    longer_alt: exports.Identifier,
    categories: [exports.UsingScopeEnumeration, exports.Identifier],
    start_chars_hint: ['D', 'd'],
});
exports.Everything = chevrotain_1.createToken({
    name: 'Everything',
    pattern: /EVERYTHING/i,
    longer_alt: exports.Identifier,
    categories: [exports.UsingScopeEnumeration, exports.Identifier],
    start_chars_hint: ['E', 'e'],
});
exports.MineAndMyGroups = chevrotain_1.createToken({
    name: 'MineAndMyGroups',
    pattern: /MINEANDMYGROUPS/i,
    longer_alt: exports.Identifier,
    categories: [exports.UsingScopeEnumeration, exports.Identifier],
    start_chars_hint: ['M', 'm'],
});
exports.Mine = chevrotain_1.createToken({
    name: 'Mine',
    pattern: /MINE/i,
    longer_alt: exports.Identifier,
    categories: [exports.UsingScopeEnumeration, exports.Identifier],
    start_chars_hint: ['M', 'm'],
});
exports.MyTerritory = chevrotain_1.createToken({
    name: 'MyTerritory',
    pattern: /MY_TERRITORY/i,
    longer_alt: exports.Identifier,
    categories: [exports.UsingScopeEnumeration, exports.Identifier],
    start_chars_hint: ['M', 'm'],
});
exports.MyTeamTerritory = chevrotain_1.createToken({
    name: 'MyTeamTerritory',
    pattern: /MY_TEAM_TERRITORY/i,
    longer_alt: exports.Identifier,
    categories: [exports.UsingScopeEnumeration, exports.Identifier],
    start_chars_hint: ['M', 'm'],
});
exports.Team = chevrotain_1.createToken({
    name: 'Team',
    pattern: /TEAM/i,
    longer_alt: exports.Identifier,
    categories: [exports.UsingScopeEnumeration, exports.Identifier],
    start_chars_hint: ['T', 't'],
});
exports.AllPrivate = chevrotain_1.createToken({
    name: 'AllPrivate',
    pattern: /ALLPRIVATE/i,
    longer_alt: exports.Identifier,
    categories: [exports.UsingScopeEnumeration, exports.Identifier],
    start_chars_hint: ['A', 'a'],
});
exports.allTokens = [
    exports.WhiteSpace,
    exports.And,
    exports.Asc,
    exports.As,
    exports.OrderBy,
    exports.Cube,
    exports.Desc,
    exports.Else,
    exports.Excludes,
    exports.False,
    exports.First,
    exports.From,
    exports.Grouping,
    exports.GroupBy,
    exports.Having,
    exports.Includes,
    exports.Like,
    exports.Limit,
    exports.Nulls,
    exports.Null,
    exports.Rollup,
    exports.Select,
    exports.True,
    exports.Using,
    exports.Where,
    exports.With,
    exports.Update,
    exports.Delegated,
    exports.Everything,
    exports.MineAndMyGroups,
    exports.Mine,
    exports.MyTerritory,
    exports.MyTeamTerritory,
    exports.Team,
    exports.AllPrivate,
    exports.AboveOrBelow,
    exports.Above,
    exports.At,
    exports.Below,
    exports.DataCategory,
    exports.End,
    exports.Offset,
    exports.Reference,
    exports.Scope,
    exports.Tracking,
    exports.Then,
    exports.Typeof,
    exports.Viewstat,
    exports.View,
    exports.When,
    exports.SecurityEnforced,
    exports.CalendarMonth,
    exports.CalendarQuarter,
    exports.CalendarYear,
    exports.DayInMonth,
    exports.DayInWeek,
    exports.DayInYear,
    exports.DayOnly,
    exports.FiscalMonth,
    exports.FiscalQuarter,
    exports.FiscalYear,
    exports.HourInDay,
    exports.WeekInMonth,
    exports.WeekInYear,
    exports.Avg,
    exports.CountDistinct,
    exports.Count,
    exports.Min,
    exports.Max,
    exports.Sum,
    exports.Distance,
    exports.Geolocation,
    exports.Fields,
    exports.Format,
    exports.Tolabel,
    exports.ConvertTimeZone,
    exports.ConvertCurrency,
    exports.Yesterday,
    exports.Today,
    exports.Tomorrow,
    exports.LastWeek,
    exports.ThisWeek,
    exports.NextWeek,
    exports.LastMonth,
    exports.ThisMonth,
    exports.NextMonth,
    exports.Last90_days,
    exports.Next90_days,
    exports.ThisQuarter,
    exports.LastQuarter,
    exports.NextQuarter,
    exports.ThisYear,
    exports.LastYear,
    exports.NextYear,
    exports.ThisFiscalQuarter,
    exports.LastFiscalQuarter,
    exports.NextFiscalQuarter,
    exports.ThisFiscalYear,
    exports.LastFiscalYear,
    exports.NextFiscalYear,
    exports.NextNDays,
    exports.LastNDays,
    exports.NDaysAgo,
    exports.NextNWeeks,
    exports.LastNWeeks,
    exports.NWeeksAgo,
    exports.NextNMonths,
    exports.LastNMonths,
    exports.NMonthsAgo,
    exports.NextNQuarters,
    exports.LastNQuarters,
    exports.NQuartersAgo,
    exports.NextNYears,
    exports.LastNYears,
    exports.NYearsAgo,
    exports.NextNFiscalQuarters,
    exports.LastNFiscalQuarters,
    exports.NFiscalQuartersAgo,
    exports.NextNFiscalYears,
    exports.LastNFiscalYears,
    exports.NFiscalYearsAgo,
    exports.GeolocationUnit,
    exports.All,
    exports.Custom,
    exports.Standard,
    exports.In,
    exports.NotIn,
    exports.For,
    exports.Or,
    exports.Last,
    exports.Not,
    exports.CurrencyPrefixedDecimal,
    exports.CurrencyPrefixedInteger,
    exports.StringIdentifier,
    exports.Identifier,
    exports.DateTime,
    exports.DateToken,
    exports.SignedDecimal,
    exports.UnsignedDecimal,
    exports.UnsignedInteger,
    exports.SignedInteger,
    exports.Equal,
    exports.NotEqual,
    exports.LessThanOrEqual,
    exports.LessThan,
    exports.GreaterThanOrEqual,
    exports.GreaterThan,
    exports.Decimal,
    exports.Colon,
    exports.Semicolon,
    exports.Comma,
    exports.Asterisk,
    exports.LParen,
    exports.RParen,
    exports.Plus,
    exports.Minus,
];
var SoqlLexer = new chevrotain_1.Lexer(exports.allTokens, { ensureOptimizations: true, skipValidations: false });
function lex(soql) {
    return SoqlLexer.tokenize(soql);
}
exports.lex = lex;
//# sourceMappingURL=lexer.js.map